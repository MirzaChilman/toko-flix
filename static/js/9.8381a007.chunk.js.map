{"version":3,"sources":["components/MovieCard/MovieCard.jsx","pages/Home/Home.jsx"],"names":["StyledDiv","styled","div","MovieCard","poster_path","id","vote_average","title","overview","price","handleAddCollectionButton","disabled","className","key","onMouseEnter","src","alt","block","danger","type","to","size","onClick","Content","moviesUrl","calculatePrice","vote","Home","location","useLocation","useState","movies","setMovies","fetchingMovies","setFetchingMovies","JSON","parse","localStorage","getItem","favoritedMovies","setFavoritedMovies","useEffect","a","isNowPlaying","pathname","includes","isPopular","axios","get","process","response","data","results","console","error","fetchMovie","style","padding","marginTop","backgroundColor","gutter","map","movie","isDisabled","find","xs","md","lg","xl","color","prevState","combinedMovies","setItem","stringify","handleAddFavoritesButton","cards","i","push","bordered","loading","active","renderLoadingCards"],"mappings":"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","file":"static/js/9.8381a007.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledDiv = styled.div`\n  position: relative;\n  min-width: 275px;\n  max-width: 350px;\n  margin: auto;\n  overflow: hidden;\n  padding: 0;\n  .content-title {\n    color: #ffffff;\n    text-align: center;\n    margin-bottom: 10px;\n  }\n  .content-details {\n    position: absolute;\n    text-align: center;\n    padding-left: 1em;\n    padding-right: 1em;\n    width: 100%;\n    top: 50%;\n    left: 50%;\n    opacity: 0;\n    transform: translate(-50%, -50%);\n    transition: all 0.3s ease-in-out 0s;\n  }\n  .content-image {\n    width: 100%;\n    object-fit: cover;\n    max-height: 100%;\n    min-height: 415px;\n  }\n  .content-details h5 {\n    color: #fff;\n    font-weight: 500;\n    margin-bottom: 0.5em;\n    text-transform: uppercase;\n  }\n  .content-details p {\n    color: #fff;\n    font-size: 0.8em;\n  }\n  .fadeIn-bottom {\n    top: 80%;\n  }\n  .content-overlay {\n    background: rgba(53, 28, 28, 0.7);\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    opacity: 0;\n    transition: all 0.4s ease-in-out 0s;\n  }\n\n  &:hover .content-overlay {\n    opacity: 1;\n  }\n  &:hover .content-details {\n    top: 50%;\n    left: 50%;\n    opacity: 1;\n  }\n`;\n\nconst MovieCard = ({\n  poster_path,\n  id,\n  vote_average,\n  title,\n  overview,\n  price,\n  handleAddCollectionButton,\n  disabled,\n}) => {\n  return (\n    <StyledDiv className=\"content\" key={id} onMouseEnter={() => {}}>\n      <div className=\"content-overlay\" />\n      <img\n        className=\"content-image\"\n        src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n        alt={overview}\n      />\n      <div className=\"content-details fadeIn-bottom\">\n        <h3 className=\"content-title\">{title}</h3>\n        <p className=\"content-text\">{`${vote_average} / 10`}</p>\n        <p className=\"content-text\">{`Rp.${price}`}</p>\n        <Button block danger type={\"primary\"}>\n          <Link to={`/movie/${id}`}>Learn More</Link>\n        </Button>\n        <br />\n        <br />\n        {handleAddCollectionButton && (\n          <Button\n            block\n            size={\"large\"}\n            type={\"primary\"}\n            onClick={handleAddCollectionButton}\n            disabled={disabled}\n          >\n            {disabled ? \"Already Favorited\" : \"Add to my favorites\"}\n          </Button>\n        )}\n      </div>\n    </StyledDiv>\n  );\n};\n\nexport default MovieCard;\n","import React, { useEffect, useState } from \"react\";\nimport { Layout, Row, Col, Skeleton, Card } from \"antd\";\nimport { useLocation } from \"react-router-dom\";\nimport MovieCard from \"../../components/MovieCard/MovieCard\";\nimport axios from \"axios\";\n\nconst { Content } = Layout;\nconst moviesUrl = {\n  nowPlaying: `/movie/now_playing`,\n  popular: `/movie/popular`,\n  upcoming: \"/movie/upcoming\",\n};\n\nexport const calculatePrice = (vote) => {\n  let price;\n\n  if (vote > 0 && vote <= 3) {\n    price = `${vote * 3500}`;\n  } else if (vote > 3 && vote <= 6) {\n    price = `${vote * 8250}`;\n  } else if (vote > 6 && vote <= 8) {\n    price = `${vote * 16350}`;\n  } else if (vote > 8 && vote <= 10) {\n    price = `${vote * 21250}`;\n  } else {\n    price = \"Unavailable\";\n  }\n  return price;\n};\n\nconst Home = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [fetchingMovies, setFetchingMovies] = useState(false);\n\n  const [favoritedMovies, setFavoritedMovies] = useState(\n    JSON.parse(localStorage.getItem(\"favoritedMovies\")) || []\n  );\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      let response;\n      const isNowPlaying = location.pathname.includes(\"now-playing\");\n      const isPopular = location.pathname.includes(\"popular\");\n      try {\n        setFetchingMovies(true);\n        if (isNowPlaying) {\n          response = await axios.get(\n            `${process.env.REACT_APP_BASE_URL}${moviesUrl.nowPlaying}?api_key=${process.env.REACT_APP_API_KEY}`\n          );\n        }\n        if (isPopular) {\n          response = await axios.get(\n            `${process.env.REACT_APP_BASE_URL}${moviesUrl.popular}?api_key=${process.env.REACT_APP_API_KEY}`\n          );\n        }\n        if (!isNowPlaying && !isPopular) {\n          response = await axios.get(\n            `${process.env.REACT_APP_BASE_URL}${moviesUrl.upcoming}?api_key=${process.env.REACT_APP_API_KEY}`\n          );\n        }\n        setMovies(response.data.results);\n      } catch (e) {\n        console.error(e);\n      } finally {\n        setFetchingMovies(false);\n      }\n    };\n    fetchMovie();\n  }, [location.pathname]);\n\n  const handleAddFavoritesButton = (movie) => {\n    const { poster_path, vote_average, title, overview, id } = movie;\n    setFavoritedMovies((prevState) => {\n      const combinedMovies = [\n        ...prevState,\n        { poster_path, vote_average, title, overview, id },\n      ];\n      localStorage.setItem(\"favoritedMovies\", JSON.stringify(combinedMovies));\n      return combinedMovies;\n    });\n  };\n\n  const renderMovies = () => {\n    return (\n      <>\n        {movies.map((movie) => {\n          const { poster_path, vote_average, title, overview, id } = movie;\n          const isDisabled = favoritedMovies.find((movie) => {\n            return movie.id === id;\n          });\n          return (\n            <Col xs={24} md={12} lg={8} xl={6}>\n              <div\n                style={{\n                  color: \"white\",\n                }}\n              >\n                <MovieCard\n                  poster_path={poster_path}\n                  id={id}\n                  vote_average={vote_average}\n                  title={title}\n                  overview={overview}\n                  price={calculatePrice(vote_average)}\n                  handleAddCollectionButton={() =>\n                    handleAddFavoritesButton(movie)\n                  }\n                  disabled={isDisabled}\n                />\n              </div>\n            </Col>\n          );\n        })}\n      </>\n    );\n  };\n\n  const renderLoadingCards = () => {\n    const cards = [];\n    for (let i = 0; i < 20; i++) {\n      cards.push(\n        <Col xs={24} md={12} lg={8} xl={6}>\n          <Card bordered={false}>\n            <Skeleton loading active />\n            <Skeleton loading active />\n            <Skeleton loading active />\n          </Card>\n        </Col>\n      );\n    }\n    return cards;\n  };\n\n  return (\n    <Content\n      style={{\n        padding: \"50px 50px\",\n        marginTop: 64,\n        backgroundColor: \"#323232\",\n      }}\n    >\n      <Row gutter={[16, 16]}>\n        {!fetchingMovies && renderMovies()}\n        {fetchingMovies && renderLoadingCards()}\n      </Row>\n    </Content>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}